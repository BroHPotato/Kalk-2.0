<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_color_factory" kind="class" language="C++" prot="public">
    <compoundname>ColorFactory</compoundname>
    <includes refid="colorfactory_8h" local="no">colorfactory.h</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_color_factory_1a82795c42a66a6ac3dc47e02e56434345" prot="private" static="yes" mutable="no">
        <type>QMap&lt; QString, <ref refid="class_generic_factory" kindref="compound">GenericFactory</ref> * &gt; *</type>
        <definition>QMap&lt; QString, GenericFactory * &gt; * ColorFactory::allColorFactories</definition>
        <argsstring></argsstring>
        <name>allColorFactories</name>
        <initializer>=nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="19" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_color_factory_1ad47298cad09cd5d2eb52c801354f5c8e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ColorFactory::setUpColorFactory</definition>
        <argsstring>()</argsstring>
        <name>setUpColorFactory</name>
        <briefdescription>
<para><ref refid="class_color_factory_1ad47298cad09cd5d2eb52c801354f5c8e" kindref="member">ColorFactory::setUpColorFactory</ref> Setups the data structure to be populated by addColorFactory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="21" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.cpp" bodystart="9" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="class_color_factory_1a99c58dc4bb1d431f1a7c399fec9d2486" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ColorFactory::destruct</definition>
        <argsstring>()</argsstring>
        <name>destruct</name>
        <briefdescription>
<para><ref refid="class_color_factory_1a99c58dc4bb1d431f1a7c399fec9d2486" kindref="member">ColorFactory::destruct</ref> deletes all data from allColorFactories;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="22" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.cpp" bodystart="17" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="class_color_factory_1a998d381b54b7b74ca24a99593030a452" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ColorFactory::ready</definition>
        <argsstring>()</argsstring>
        <name>ready</name>
        <briefdescription>
<para><ref refid="class_color_factory_1a998d381b54b7b74ca24a99593030a452" kindref="member">ColorFactory::ready</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>if the Data Structure is ready to be filled </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="23" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.cpp" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_color_factory_1a16fd150054d514e72eaf6d5bf9e80fe2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ColorFactory::addColorFactory</definition>
        <argsstring>(const QString &amp;name, GenericFactory &amp;factory)</argsstring>
        <name>addColorFactory</name>
        <param>
          <type>const QString &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="class_generic_factory" kindref="compound">GenericFactory</ref> &amp;</type>
          <declname>factory</declname>
        </param>
        <briefdescription>
<para><ref refid="class_color_factory_1a16fd150054d514e72eaf6d5bf9e80fe2" kindref="member">ColorFactory::addColorFactory</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>factory</parametername>
</parameternamelist>
<parameterdescription>
<para>adds an entry to allColorFactories </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="24" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.cpp" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_color_factory_1a47dab64f01e0d5543ed41d82742b1a32" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QVector&lt; QString &gt;</type>
        <definition>QVector&lt; QString &gt; ColorFactory::getAllColorTypes</definition>
        <argsstring>()</argsstring>
        <name>getAllColorTypes</name>
        <briefdescription>
<para><ref refid="class_color_factory_1a47dab64f01e0d5543ed41d82742b1a32" kindref="member">ColorFactory::getAllColorTypes</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>returns all color types that are available </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="25" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.cpp" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_color_factory_1a0b8412fa33dd5eaefff38412a96fc638" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_color" kindref="compound">Color</ref> *</type>
        <definition>Color * ColorFactory::getNewColor</definition>
        <argsstring>(const QString &amp;key)</argsstring>
        <name>getNewColor</name>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para><ref refid="class_color_factory_1a0b8412fa33dd5eaefff38412a96fc638" kindref="member">ColorFactory::getNewColor</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new <ref refid="class_color" kindref="compound">Color</ref> representation; returns a new <ref refid="class_color" kindref="compound">Color</ref> representation; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="26" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.cpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_color_factory_1a1fcc2e8e07462cd0932317144c712c86" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_color" kindref="compound">Color</ref> *</type>
        <definition>Color * ColorFactory::getNewColor</definition>
        <argsstring>(const QString &amp;key, const Color *color)</argsstring>
        <name>getNewColor</name>
        <param>
          <type>const QString &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="class_color" kindref="compound">Color</ref> *</type>
          <declname>color</declname>
        </param>
        <briefdescription>
<para><ref refid="class_color_factory_1a0b8412fa33dd5eaefff38412a96fc638" kindref="member">ColorFactory::getNewColor</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new <ref refid="class_color" kindref="compound">Color</ref> representation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="27" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.cpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_color_factory_1a2c20174b2a883ee984ddb21d4cb31b5f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_color" kindref="compound">Color</ref> *</type>
        <definition>Color * ColorFactory::cloneColor</definition>
        <argsstring>(const Color *color)</argsstring>
        <name>cloneColor</name>
        <param>
          <type>const <ref refid="class_color" kindref="compound">Color</ref> *</type>
          <declname>color</declname>
        </param>
        <briefdescription>
<para><ref refid="class_color_factory_1a2c20174b2a883ee984ddb21d4cb31b5f" kindref="member">ColorFactory::cloneColor</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a clone of color Clones color with deep copy; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="28" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.cpp" bodystart="76" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_color_factory_1a011ad08eec6d8b4f6e8bba6da64ec345" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_color" kindref="compound">Color</ref> *</type>
        <definition>Color * ColorFactory::execution</definition>
        <argsstring>(const Color *left, int operation, const Color *right=nullptr)</argsstring>
        <name>execution</name>
        <param>
          <type>const <ref refid="class_color" kindref="compound">Color</ref> *</type>
          <declname>left</declname>
        </param>
        <param>
          <type>int</type>
          <declname>operation</declname>
        </param>
        <param>
          <type>const <ref refid="class_color" kindref="compound">Color</ref> *</type>
          <declname>right</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para><ref refid="class_color_factory_1a011ad08eec6d8b4f6e8bba6da64ec345" kindref="member">ColorFactory::execution</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>operation</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the result o the operation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="29" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.cpp" bodystart="90" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_color_factory_1a35ec83ba9159727511989055e7868d63" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_color" kindref="compound">Color</ref> *</type>
        <definition>Color * ColorFactory::execution</definition>
        <argsstring>(const Color *left, const int &amp;operation, const int right=1)</argsstring>
        <name>execution</name>
        <param>
          <type>const <ref refid="class_color" kindref="compound">Color</ref> *</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>operation</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>right</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para><ref refid="class_color_factory_1a011ad08eec6d8b4f6e8bba6da64ec345" kindref="member">ColorFactory::execution</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>operation</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the result o the operation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="30" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.cpp" bodystart="106" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_color_factory_1a9dc30325232e3cf63276ed8f9c2d6ab1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QVector&lt; QString &gt;</type>
        <definition>QVector&lt; QString &gt; ColorFactory::availableOperations</definition>
        <argsstring>()</argsstring>
        <name>availableOperations</name>
        <briefdescription>
<para><ref refid="class_color_factory_1a9dc30325232e3cf63276ed8f9c2d6ab1" kindref="member">ColorFactory::availableOperations</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>all the available operations </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="31" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.cpp" bodystart="117" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_color_factory_1a4a6862d52370ea64981f1842dfa6c4f2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QVector&lt; QString &gt;</type>
        <definition>QVector&lt; QString &gt; ColorFactory::permittedOperations</definition>
        <argsstring>(const QString &amp;type)</argsstring>
        <name>permittedOperations</name>
        <param>
          <type>const QString &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para><ref refid="class_color_factory_1a4a6862d52370ea64981f1842dfa6c4f2" kindref="member">ColorFactory::permittedOperations</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>all the permitted operations </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="32" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.cpp" bodystart="129" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_color_factory_1a460165d3cd7b710b4f8731a5e56d8c35" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QVector&lt; QString &gt;</type>
        <definition>QVector&lt; QString &gt; ColorFactory::typeByOperation</definition>
        <argsstring>(int operation)</argsstring>
        <name>typeByOperation</name>
        <param>
          <type>int</type>
          <declname>operation</declname>
        </param>
        <briefdescription>
<para><ref refid="class_color_factory_1a460165d3cd7b710b4f8731a5e56d8c35" kindref="member">ColorFactory::typeByOperation</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>operation</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>all kind of color representation that can be used in a selected operation; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="33" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.cpp" bodystart="141" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_color_factory_1a08c21c5ec305802deb7d610ff0a66ef7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ColorFactory::getTypeSize</definition>
        <argsstring>()</argsstring>
        <name>getTypeSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="34" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>this class stores all Factories, <ref refid="class_color_factory" kindref="compound">ColorFactory</ref> initializes a New <ref refid="class_color" kindref="compound">Color</ref> object when required, returns what kind of operation can be done with a specific color representation and returns the result using the permitted operations </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" line="17" column="1" bodyfile="/home/gian/Projects/Kalk2-0/Kalk/Model/Factory/colorfactory.h" bodystart="17" bodyend="35"/>
    <listofallmembers>
      <member refid="class_color_factory_1a16fd150054d514e72eaf6d5bf9e80fe2" prot="public" virt="non-virtual"><scope>ColorFactory</scope><name>addColorFactory</name></member>
      <member refid="class_color_factory_1a82795c42a66a6ac3dc47e02e56434345" prot="private" virt="non-virtual"><scope>ColorFactory</scope><name>allColorFactories</name></member>
      <member refid="class_color_factory_1a9dc30325232e3cf63276ed8f9c2d6ab1" prot="public" virt="non-virtual"><scope>ColorFactory</scope><name>availableOperations</name></member>
      <member refid="class_color_factory_1a2c20174b2a883ee984ddb21d4cb31b5f" prot="public" virt="non-virtual"><scope>ColorFactory</scope><name>cloneColor</name></member>
      <member refid="class_color_factory_1a99c58dc4bb1d431f1a7c399fec9d2486" prot="public" virt="non-virtual"><scope>ColorFactory</scope><name>destruct</name></member>
      <member refid="class_color_factory_1a011ad08eec6d8b4f6e8bba6da64ec345" prot="public" virt="non-virtual"><scope>ColorFactory</scope><name>execution</name></member>
      <member refid="class_color_factory_1a35ec83ba9159727511989055e7868d63" prot="public" virt="non-virtual"><scope>ColorFactory</scope><name>execution</name></member>
      <member refid="class_color_factory_1a47dab64f01e0d5543ed41d82742b1a32" prot="public" virt="non-virtual"><scope>ColorFactory</scope><name>getAllColorTypes</name></member>
      <member refid="class_color_factory_1a0b8412fa33dd5eaefff38412a96fc638" prot="public" virt="non-virtual"><scope>ColorFactory</scope><name>getNewColor</name></member>
      <member refid="class_color_factory_1a1fcc2e8e07462cd0932317144c712c86" prot="public" virt="non-virtual"><scope>ColorFactory</scope><name>getNewColor</name></member>
      <member refid="class_color_factory_1a08c21c5ec305802deb7d610ff0a66ef7" prot="public" virt="non-virtual"><scope>ColorFactory</scope><name>getTypeSize</name></member>
      <member refid="class_color_factory_1a4a6862d52370ea64981f1842dfa6c4f2" prot="public" virt="non-virtual"><scope>ColorFactory</scope><name>permittedOperations</name></member>
      <member refid="class_color_factory_1a998d381b54b7b74ca24a99593030a452" prot="public" virt="non-virtual"><scope>ColorFactory</scope><name>ready</name></member>
      <member refid="class_color_factory_1ad47298cad09cd5d2eb52c801354f5c8e" prot="public" virt="non-virtual"><scope>ColorFactory</scope><name>setUpColorFactory</name></member>
      <member refid="class_color_factory_1a460165d3cd7b710b4f8731a5e56d8c35" prot="public" virt="non-virtual"><scope>ColorFactory</scope><name>typeByOperation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
